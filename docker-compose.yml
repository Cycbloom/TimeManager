services:
  server:
    build: ./server
    ports:
      - "3000:3000"
      - "9229:9229"
    volumes:
      - ./server:/app
    environment:
      - PG_HOST=postgres
      - PG_USER=postgres
      - PG_PASSWORD=secret
      - PG_DATABASE=mydb
      - PG_PORT=5432
      - MONGO_URI=mongodb://mongo:27017
      - MONGO_DB=timemanager
      - NODE_ENV=development
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy

  frontend:
    build:
      context: ./my-app
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./my-app:/app
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: mydb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:6.0
    command: mongod --quiet
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 2

volumes:
  node_modules:
